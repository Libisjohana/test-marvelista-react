{"version":3,"sources":["components/FormUser.jsx","assets/images/user.svg","components/Header/Header.jsx","components/BarraPreguntas.jsx","assets/data/data.js","components/ResultadoTest.jsx","components/Pregunta.jsx","components/Preguntas.jsx","App.jsx","index.jsx"],"names":["FormUser","setDatosUsuario","useForm","register","handleSubmit","className","onSubmit","datos","existeData","autoComplete","required","placeholder","name","id","type","Header","nombre","apellido","src","user_icon","alt","BarraPreguntas","solucionClase","barraPreguntas","map","p","solucion","numPregunta","PREGUNTAS","titulo","respuestasPosibles","indice","respuesta","respuestaCorrecta","ResultadoTest","acertadas","filter","length","erradas","onClick","window","location","reload","Pregunta","setBarraPreguntas","useState","contadorPreguntas","setContadorPregunta","testTerminado","setTestTerminado","isError","text","error","setError","valorCampo","setValorCampo","letrasRespuesta","preguntaActual","res","onChange","event","letra","target","value","toUpperCase","includes","maxLength","solucionPregunta","toLowerCase","disabled","Preguntas","App","datosUsuario","style","margin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.428468b9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const FormUser = ({ setDatosUsuario }) => {\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = (datos) => {\r\n        setDatosUsuario({\r\n            ...datos,\r\n            existeData: true\r\n        })\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"box-login\"> \r\n            \r\n            <div className=\"titulo-box-login\">\r\n                <h2>Nombre y Apellido</h2>\r\n            </div>\r\n\r\n            <div className=\"form-box\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <input autoComplete=\"false\" required placeholder=\"Nombre\" name=\"nombre\" id=\"nombre\" {...register(\"nombre\")} />\r\n                    <input autoComplete=\"false\" required placeholder=\"Apellido\" name=\"apellido\" id=\"apellido\" {...register(\"apellido\")} />\r\n                    <input name=\"submit\" id=\"submit\" type=\"submit\" />\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nFormUser.propTypes = {\r\n    setDatosUsuario: PropTypes.func.isRequired,\r\n}\r\n","export default __webpack_public_path__ + \"static/media/user.be33bb01.svg\";","import React from 'react'\r\nimport user_icon from '../../assets/images/user.svg'; \r\n\r\nexport const Header = ({nombre = '', apellido = ''}) => {\r\n    return (\r\n        <header>\r\n            <h2 className=\"title-header\">Test Marvelista</h2>\r\n\r\n            {\r\n                nombre !== '' &&\r\n                    <div className=\"box-user animate__animated animate__fadeIn\">\r\n                        <img src={user_icon} alt=\"Usuario activo\"/>\r\n                        <span>{nombre} {apellido}</span>\r\n                    </div>\r\n            }\r\n\r\n        </header>\r\n    )\r\n}\r\n","/* eslint-disable no-sequences */\r\nimport React from 'react'\r\n\r\nexport const BarraPreguntas = ( { barraPreguntas } ) => {\r\n    let solucionClase;\r\n    return (\r\n        <div className=\"caja-soluciones\">\r\n            { \r\n                barraPreguntas.map( p => (\r\n                    solucionClase = (p.solucion ? 'correcta' : 'incorrecta'),\r\n                    <div className=\"caja-pregunta\" key={p.numPregunta}>\r\n                        <span \r\n                            className={ \"circulo-numero \" + (solucionClase) }\r\n                        >\r\n                            {p.numPregunta}\r\n                        </span>\r\n                        <p className={ \"text-solucion \" + (solucionClase) }>\r\n                            { p.solucion ? 'Correcta' : 'Incorrecta' }\r\n                        </p>\r\n                    </div>\r\n                ) )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export const PREGUNTAS = [\r\n    {\r\n        titulo: \"Que significan las Iniciales UCM\",\r\n        respuestasPosibles: [\r\n            {\r\n                indice: \"A\",\r\n                respuesta: \"Universal Comic Marvel\"\r\n            },\r\n            {\r\n                indice: \"B\",\r\n                respuesta:  \"Universo Comico Marveliasta\"\r\n            },\r\n            {\r\n                indice: \"C\",\r\n                respuesta: \"Un Cine Marvelista\"\r\n            },\r\n            {\r\n                indice: \"D\",\r\n                respuesta: \"Universo Cinematografico de Marvel\"\r\n            }\r\n        ],\r\n        respuestaCorrecta: \"D\" \r\n    },\r\n    {\r\n        titulo: \"Cual es el nombre del Actor que interpreta al Capitan America\",\r\n        respuestasPosibles: [\r\n            {\r\n                indice: \"A\",\r\n                respuesta: \"Sebastian Stan\"\r\n            },\r\n            {\r\n                indice: \"B\",\r\n                respuesta:  \"Cristian Roger\"\r\n            },\r\n            {\r\n                indice: \"C\",\r\n                respuesta: \"Chris Evans\"\r\n            },\r\n            {\r\n                indice: \"D\",\r\n                respuesta: \"Chris Hemsworth\"\r\n            }\r\n        ],\r\n        respuestaCorrecta: \"C\" \r\n    },\r\n    {\r\n        titulo: \"Cual era el nombre de la IA que utilizó Iron Man en su primera Pelicula\",\r\n        respuestasPosibles: [\r\n            {\r\n                indice: \"A\",\r\n                respuesta: \"Sofia\"\r\n            },\r\n            {\r\n                indice: \"B\",\r\n                respuesta: \"Jarvis\"\r\n            },\r\n            {\r\n                indice: \"C\",\r\n                respuesta: \"Carlos\"\r\n            },\r\n            {\r\n                indice: \"D\",\r\n                respuesta: \"Friday\"\r\n            }\r\n        ],\r\n        respuestaCorrecta: \"B\" \r\n    },\r\n    {\r\n        titulo: \"En que año se estreno Capitan America: El primer vengador\",\r\n        respuestasPosibles: [\r\n            {\r\n                indice: \"A\",\r\n                respuesta: \"2009\"\r\n            },\r\n            {\r\n                indice: \"B\",\r\n                respuesta:  \"2008\"\r\n            },\r\n            {\r\n                indice: \"C\",\r\n                respuesta: \"2011\"\r\n            },\r\n            {\r\n                indice: \"D\",\r\n                respuesta: \"2010\"\r\n            }\r\n        ],\r\n        respuestaCorrecta: \"C\" \r\n    },\r\n    {\r\n        titulo: \"Cual es el Nombre del Papá de Tony Stark\",\r\n        respuestasPosibles: [\r\n            {\r\n                indice: \"A\",\r\n                respuesta: \"Hamilton Stark\"\r\n            },\r\n            {\r\n                indice: \"B\",\r\n                respuesta: \"Chris Stark\"\r\n            },\r\n            {\r\n                indice: \"C\",\r\n                respuesta: \"Howard Stark\"\r\n            },\r\n            {\r\n                indice: \"D\",\r\n                respuesta: \"Nick Stark\"\r\n            }\r\n        ],\r\n        respuestaCorrecta: \"C\" \r\n    },\r\n    {\r\n        titulo: \"Cual es el Nombre Completo de Tony\",\r\n        respuestasPosibles: [\r\n            {\r\n                indice: \"A\",\r\n                respuesta: \"Anthony Edward Stark\"\r\n            },\r\n            {\r\n                indice: \"B\",\r\n                respuesta: \"Anthony Howard Stark\"\r\n            },\r\n            {\r\n                indice: \"C\",\r\n                respuesta: \"Antonio Evans Stark\"\r\n            },\r\n            {\r\n                indice: \"D\",\r\n                respuesta: \"Anthony Segundo Stark\"\r\n            }\r\n        ],\r\n        respuestaCorrecta: \"A\" \r\n    },\r\n    {\r\n        titulo: \"omo conoció Tony Stark (Iron Man) a Natasha Romanoff(Black Widow)\",\r\n        respuestasPosibles: [\r\n            {\r\n                indice: \"A\",\r\n                respuesta: \"En una fiesta\"\r\n            },\r\n            {\r\n                indice: \"B\",\r\n                respuesta: \"Tony Stark la salvó de morir en un atraco\"\r\n            },\r\n            {\r\n                indice: \"C\",\r\n                respuesta: \"Estaba enamorando a Tony Stark en un almacen\"\r\n            },\r\n            {\r\n                indice: \"D\",\r\n                respuesta: \"Se infiltró como su Secretaria\"\r\n            }\r\n        ],\r\n        respuestaCorrecta: \"D\" \r\n    },\r\n    {\r\n        titulo: \"Que gema que buscaban los Guardianes de la Galaxia en Su primera Pelicula\",\r\n        respuestasPosibles: [\r\n            {\r\n                indice: \"A\",\r\n                respuesta: \"Alma\"\r\n            },\r\n            {\r\n                indice: \"B\",\r\n                respuesta:  \"Poder\"\r\n            },\r\n            {\r\n                indice: \"C\",\r\n                respuesta: \"Realidad\"\r\n            },\r\n            {\r\n                indice: \"D\",\r\n                respuesta: \"Tiempo\"\r\n            }\r\n        ],\r\n        respuestaCorrecta: \"B\" \r\n    },\r\n    {\r\n        titulo: \"Que frase dijo el Capitan America cuando inició la guerra en Avengers: End Game\",\r\n        respuestasPosibles: [\r\n            {\r\n                indice: \"A\",\r\n                respuesta: \"Todos unidos Jamás seremos vencidos!!!\"\r\n            },\r\n            {\r\n                indice: \"B\",\r\n                respuesta:  \"Vengadores a Pelearrrr!!!\"\r\n            },\r\n            {\r\n                indice: \"C\",\r\n                respuesta: \"Vamos a matar a Thanoss!!!\"\r\n            },\r\n            {\r\n                indice: \"D\",\r\n                respuesta: \"Vengadores Unidos!!!!\"\r\n            }\r\n        ],\r\n        respuestaCorrecta: \"D\" \r\n    },\r\n    {\r\n        titulo: \"Cual era la Comida Rapida preferida de Tony Stark\",\r\n        respuestasPosibles: [\r\n            {\r\n                indice: \"A\",\r\n                respuesta: \"Desgranizado\"\r\n            },\r\n            {\r\n                indice: \"B\",\r\n                respuesta:  \"Los Tacos\"\r\n            },\r\n            {\r\n                indice: \"C\",\r\n                respuesta: \"Las Salchichas\"\r\n            },\r\n            {\r\n                indice: \"D\",\r\n                respuesta: \"Las Hamburguesas\"\r\n            }\r\n        ],\r\n        respuestaCorrecta: \"D\" \r\n    }\r\n]","import React from 'react'\r\n\r\nexport const ResultadoTest = ( {barraPreguntas} ) => {\r\n\r\n    const acertadas = barraPreguntas.filter( (p) => p.solucion ).length; \r\n    const erradas = barraPreguntas.filter( (p) => !p.solucion ).length; \r\n\r\n    return (\r\n        <div className=\"caja-resultado\">\r\n            <h2 className=\"h4 titulo-resultado text-light\">Resultado del Test</h2>\r\n            <h3 className=\"h4 preguntas-acertadas text-success\">\r\n                Preguntas acertadas: { acertadas }\r\n            </h3>\r\n            <h3 className=\"h4 preguntas-erradas text-danger\">\r\n                Preguntas erradas: { erradas }\r\n            </h3>\r\n            <h3 className=\"h4 promedio text-light\">\r\n                Promedio: { ( barraPreguntas.length * acertadas ) / 1 }%\r\n            </h3>\r\n\r\n            <button className=\"btn btn-primary \" onClick={ () => { window.location.reload() }  }> Nuevo Intento </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { PREGUNTAS } from '../assets/data/data'\r\nimport { ResultadoTest } from './ResultadoTest';\r\n\r\nexport const Pregunta = ( { barraPreguntas, setBarraPreguntas }) => {\r\n\r\n    const [contadorPreguntas, setContadorPregunta] = useState( 0 );\r\n\r\n    const [testTerminado, setTestTerminado] = useState( false );\r\n\r\n    const [error, setError] = useState({ isError: false, text: '' });\r\n\r\n    const [valorCampo, setValorCampo] = useState('');\r\n\r\n    const { isError, text } = error;\r\n\r\n    const letrasRespuesta = ['A', 'B', 'C', 'D'];\r\n\r\n    const handleChangeInput = (event) => {\r\n        const letra = event.target.value.toUpperCase();\r\n        if( !letrasRespuesta.includes(letra) && letra !== ''){\r\n            setError({ \r\n                isError: true,\r\n                text: letra + ' No es valida!!'\r\n            })\r\n            event.target.value = '';\r\n        } else {\r\n            setError({ \r\n                ...error,\r\n                isError: false,\r\n            })\r\n            setValorCampo( letra );\r\n        }\r\n    }\r\n\r\n    const preguntaActual = PREGUNTAS[contadorPreguntas]; \r\n    \r\n    const handleCambioPregunta = () => {\r\n\r\n        let solucionPregunta = false;\r\n\r\n        if( preguntaActual.respuestaCorrecta.toLowerCase() === valorCampo.toLowerCase()){\r\n            solucionPregunta = true;\r\n        }\r\n        \r\n        setBarraPreguntas([\r\n            ...barraPreguntas,\r\n            {\r\n                numPregunta: contadorPreguntas + 1,\r\n                solucion: solucionPregunta\r\n            }\r\n        ])\r\n        \r\n        if( PREGUNTAS.length === contadorPreguntas + 1 ){\r\n            setTestTerminado( true );\r\n            return;\r\n        }\r\n        setContadorPregunta( contadorPreguntas + 1 );\r\n        setValorCampo('');\r\n    }\r\n\r\n\r\n    return (\r\n        <>  \r\n            {\r\n                !testTerminado ? \r\n                <div className=\"col-md-10 caja-pregunta\">\r\n                    <h3 className=\"titulo-pregunta\">{contadorPreguntas + 1}. ¿{ preguntaActual.titulo }?</h3>\r\n\r\n                    <div className=\"caja-respuestas row\">\r\n                        {\r\n                            preguntaActual.respuestasPosibles.map( res => (\r\n                                <div key={res.indice} className=\"col-md-6\">\r\n                                    <p> {res.indice}: <span>{res.respuesta}</span> </p>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"respuesta-boton row\" >\r\n                        <input onChange={ handleChangeInput } value={valorCampo} className=\"col-md-6 input-respuesta\" maxLength=\"1\" autoComplete=\"false\" required name=\"repuesta\" id=\"repuesta\"/>\r\n                        <button onClick={ handleCambioPregunta } disabled={ isError || (valorCampo === '')} className=\"btn btn-primary col-md-6\"> Siguiente </button>\r\n                        { isError && <span className=\"col-md-12 text-light\"> { text } </span> }\r\n                    </div>\r\n\r\n                </div> :\r\n                <ResultadoTest barraPreguntas={barraPreguntas} />\r\n            }\r\n\r\n            \r\n\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { BarraPreguntas } from './BarraPreguntas'\r\nimport { Pregunta } from './Pregunta'\r\n\r\nexport const Preguntas = ( {nombre = '', apellido = ''} ) => {\r\n\r\n    const [barraPreguntas, setBarraPreguntas] = useState([])\r\n\r\n    return (\r\n        <div className=\"div-preguntas row\">\r\n            \r\n            <div className=\"col-md-4\">\r\n                <BarraPreguntas barraPreguntas={barraPreguntas} />\r\n            </div>\r\n\r\n            <div className=\"col-md-8\">\r\n                <div className=\"caja-preguntas\">\r\n                    <div className=\"caja-header\">\r\n                        <h2 className=\"titulo-preguntas\">Preguntas</h2>\r\n                        <h2 className=\"nombre-usuario\">Usuario: { nombre } { apellido }</h2>\r\n                    </div>\r\n                    <Pregunta barraPreguntas={ barraPreguntas } setBarraPreguntas={ setBarraPreguntas } />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react/style-prop-object */\nimport { useState } from 'react';\nimport './App.scss';\nimport { FormUser } from './components/FormUser';\nimport { Header } from './components/Header/Header';\nimport { Preguntas } from './components/Preguntas';\n\nfunction App() {\n\n  const [datosUsuario, setDatosUsuario] = useState({ nombre: '', apellido: '', existeData: false });\n\n  const { nombre, apellido, existeData } = datosUsuario;\n\n  \n\n  return (\n    <>\n      <Header nombre={nombre} apellido={apellido} /> \n\n      {\n        !existeData && \n          <div className=\"col-4 box-formulario\">\n            <FormUser setDatosUsuario={ setDatosUsuario } />\n          </div>\n      }  \n\n      { \n        existeData && \n          <div className=\"col-md-10\" style={{margin: \"0px auto\"}}>\n            <Preguntas nombre={nombre} apellido={apellido} />\n          </div>\n      }\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}